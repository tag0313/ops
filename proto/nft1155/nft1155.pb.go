// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: proto/nft1155/nft1155.proto

package pbNft1155

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount []byte `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *IdAmount) Reset() {
	*x = IdAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdAmount) ProtoMessage() {}

func (x *IdAmount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdAmount.ProtoReflect.Descriptor instead.
func (*IdAmount) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{0}
}

func (x *IdAmount) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *IdAmount) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type GetTransactionByHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash string `protobuf:"bytes,1,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
}

func (x *GetTransactionByHashReq) Reset() {
	*x = GetTransactionByHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashReq) ProtoMessage() {}

func (x *GetTransactionByHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashReq.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashReq) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{1}
}

func (x *GetTransactionByHashReq) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type GetTransactionByHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            uint32      `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Nonce           uint64      `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice        []byte      `protobuf:"bytes,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Gas             uint64      `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	EthValue        []byte      `protobuf:"bytes,5,opt,name=ethValue,proto3" json:"ethValue,omitempty"`
	EthTo           string      `protobuf:"bytes,10,opt,name=ethTo,proto3" json:"ethTo,omitempty"`
	Hash            string      `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`
	IsPending       bool        `protobuf:"varint,12,opt,name=isPending,proto3" json:"isPending,omitempty"`
	Status          uint32      `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	ContractFrom    string      `protobuf:"bytes,14,opt,name=contractFrom,proto3" json:"contractFrom,omitempty"`
	ContractAddress string      `protobuf:"bytes,15,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	ContractTo      string      `protobuf:"bytes,17,opt,name=contractTo,proto3" json:"contractTo,omitempty"`
	Data            []byte      `protobuf:"bytes,20,opt,name=data,proto3" json:"data,omitempty"`
	IdAndAmount     []*IdAmount `protobuf:"bytes,21,rep,name=idAndAmount,proto3" json:"idAndAmount,omitempty"`
}

func (x *GetTransactionByHashResponse) Reset() {
	*x = GetTransactionByHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashResponse) ProtoMessage() {}

func (x *GetTransactionByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{2}
}

func (x *GetTransactionByHashResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetTransactionByHashResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetTransactionByHashResponse) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *GetTransactionByHashResponse) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *GetTransactionByHashResponse) GetEthValue() []byte {
	if x != nil {
		return x.EthValue
	}
	return nil
}

func (x *GetTransactionByHashResponse) GetEthTo() string {
	if x != nil {
		return x.EthTo
	}
	return ""
}

func (x *GetTransactionByHashResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetTransactionByHashResponse) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

func (x *GetTransactionByHashResponse) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetTransactionByHashResponse) GetContractFrom() string {
	if x != nil {
		return x.ContractFrom
	}
	return ""
}

func (x *GetTransactionByHashResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetTransactionByHashResponse) GetContractTo() string {
	if x != nil {
		return x.ContractTo
	}
	return ""
}

func (x *GetTransactionByHashResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetTransactionByHashResponse) GetIdAndAmount() []*IdAmount {
	if x != nil {
		return x.IdAndAmount
	}
	return nil
}

type TransferERC20Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenContract string `protobuf:"bytes,1,opt,name=tokenContract,proto3" json:"tokenContract,omitempty"`
	AddressTo     string `protobuf:"bytes,2,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount        string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferERC20Request) Reset() {
	*x = TransferERC20Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferERC20Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferERC20Request) ProtoMessage() {}

func (x *TransferERC20Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferERC20Request.ProtoReflect.Descriptor instead.
func (*TransferERC20Request) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{3}
}

func (x *TransferERC20Request) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *TransferERC20Request) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *TransferERC20Request) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GasFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasPrice []byte `protobuf:"bytes,1,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	GasLimit uint64 `protobuf:"varint,2,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
}

func (x *GasFeeResponse) Reset() {
	*x = GasFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasFeeResponse) ProtoMessage() {}

func (x *GasFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasFeeResponse.ProtoReflect.Descriptor instead.
func (*GasFeeResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{4}
}

func (x *GasFeeResponse) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *GasFeeResponse) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

type NameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NameRequest) Reset() {
	*x = NameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRequest) ProtoMessage() {}

func (x *NameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRequest.ProtoReflect.Descriptor instead.
func (*NameRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{5}
}

type NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{6}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{7}
}

type SymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *SymbolResponse) Reset() {
	*x = SymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolResponse) ProtoMessage() {}

func (x *SymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolResponse.ProtoReflect.Descriptor instead.
func (*SymbolResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{8}
}

func (x *SymbolResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type OwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OwnerRequest) Reset() {
	*x = OwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerRequest) ProtoMessage() {}

func (x *OwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerRequest.ProtoReflect.Descriptor instead.
func (*OwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{9}
}

type OwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress string `protobuf:"bytes,1,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
}

func (x *OwnerResponse) Reset() {
	*x = OwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerResponse) ProtoMessage() {}

func (x *OwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerResponse.ProtoReflect.Descriptor instead.
func (*OwnerResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{10}
}

func (x *OwnerResponse) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type UriRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //uint256
}

func (x *UriRequest) Reset() {
	*x = UriRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UriRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriRequest) ProtoMessage() {}

func (x *UriRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriRequest.ProtoReflect.Descriptor instead.
func (*UriRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{11}
}

func (x *UriRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type UriResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *UriResponse) Reset() {
	*x = UriResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UriResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriResponse) ProtoMessage() {}

func (x *UriResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriResponse.ProtoReflect.Descriptor instead.
func (*UriResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{12}
}

func (x *UriResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type TokenSupplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //uint256
}

func (x *TokenSupplyRequest) Reset() {
	*x = TokenSupplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSupplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSupplyRequest) ProtoMessage() {}

func (x *TokenSupplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSupplyRequest.ProtoReflect.Descriptor instead.
func (*TokenSupplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{13}
}

func (x *TokenSupplyRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type TokenSupplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount []byte `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"` //uint256
}

func (x *TokenSupplyResponse) Reset() {
	*x = TokenSupplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSupplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSupplyResponse) ProtoMessage() {}

func (x *TokenSupplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSupplyResponse.ProtoReflect.Descriptor instead.
func (*TokenSupplyResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{14}
}

func (x *TokenSupplyResponse) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type BalanceOfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress string `protobuf:"bytes,1,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	Id           []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"` //uint256
}

func (x *BalanceOfRequest) Reset() {
	*x = BalanceOfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfRequest) ProtoMessage() {}

func (x *BalanceOfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfRequest.ProtoReflect.Descriptor instead.
func (*BalanceOfRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{15}
}

func (x *BalanceOfRequest) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *BalanceOfRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type BalanceOfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance      []byte `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Decimals     uint32 `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	OwnerAddress string `protobuf:"bytes,3,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
}

func (x *BalanceOfResponse) Reset() {
	*x = BalanceOfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfResponse) ProtoMessage() {}

func (x *BalanceOfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfResponse.ProtoReflect.Descriptor instead.
func (*BalanceOfResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{16}
}

func (x *BalanceOfResponse) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *BalanceOfResponse) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *BalanceOfResponse) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type BalanceOfBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owners []*BalanceOfRequest `protobuf:"bytes,1,rep,name=owners,proto3" json:"owners,omitempty"`
}

func (x *BalanceOfBatchRequest) Reset() {
	*x = BalanceOfBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfBatchRequest) ProtoMessage() {}

func (x *BalanceOfBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfBatchRequest.ProtoReflect.Descriptor instead.
func (*BalanceOfBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{17}
}

func (x *BalanceOfBatchRequest) GetOwners() []*BalanceOfRequest {
	if x != nil {
		return x.Owners
	}
	return nil
}

type BalanceOfBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances []*BalanceOfResponse `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"` //uint256
}

func (x *BalanceOfBatchResponse) Reset() {
	*x = BalanceOfBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfBatchResponse) ProtoMessage() {}

func (x *BalanceOfBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfBatchResponse.ProtoReflect.Descriptor instead.
func (*BalanceOfBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{18}
}

func (x *BalanceOfBatchResponse) GetBalances() []*BalanceOfResponse {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetNextTokenIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amounts [][]byte `protobuf:"bytes,1,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *GetNextTokenIDRequest) Reset() {
	*x = GetNextTokenIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTokenIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTokenIDRequest) ProtoMessage() {}

func (x *GetNextTokenIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextTokenIDRequest.ProtoReflect.Descriptor instead.
func (*GetNextTokenIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{19}
}

func (x *GetNextTokenIDRequest) GetAmounts() [][]byte {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type GetNextTokenIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //uint256
}

func (x *GetNextTokenIDResponse) Reset() {
	*x = GetNextTokenIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTokenIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTokenIDResponse) ProtoMessage() {}

func (x *GetNextTokenIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextTokenIDResponse.ProtoReflect.Descriptor instead.
func (*GetNextTokenIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{20}
}

func (x *GetNextTokenIDResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type IsApprovedForAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress    string `protobuf:"bytes,1,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	OperatorAddress string `protobuf:"bytes,2,opt,name=operatorAddress,proto3" json:"operatorAddress,omitempty"`
}

func (x *IsApprovedForAllRequest) Reset() {
	*x = IsApprovedForAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsApprovedForAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsApprovedForAllRequest) ProtoMessage() {}

func (x *IsApprovedForAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsApprovedForAllRequest.ProtoReflect.Descriptor instead.
func (*IsApprovedForAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{21}
}

func (x *IsApprovedForAllRequest) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *IsApprovedForAllRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

type IsApprovedForAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOperator bool `protobuf:"varint,1,opt,name=isOperator,proto3" json:"isOperator,omitempty"`
}

func (x *IsApprovedForAllResponse) Reset() {
	*x = IsApprovedForAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsApprovedForAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsApprovedForAllResponse) ProtoMessage() {}

func (x *IsApprovedForAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsApprovedForAllResponse.ProtoReflect.Descriptor instead.
func (*IsApprovedForAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{22}
}

func (x *IsApprovedForAllResponse) GetIsOperator() bool {
	if x != nil {
		return x.IsOperator
	}
	return false
}

type SafeTransferFromRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress string `protobuf:"bytes,1,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress   string `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Id          []byte `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`         //uint256
	Amount      []byte `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"` //uint256
	Data        []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SafeTransferFromRequest) Reset() {
	*x = SafeTransferFromRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeTransferFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeTransferFromRequest) ProtoMessage() {}

func (x *SafeTransferFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeTransferFromRequest.ProtoReflect.Descriptor instead.
func (*SafeTransferFromRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{23}
}

func (x *SafeTransferFromRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *SafeTransferFromRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SafeTransferFromRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SafeTransferFromRequest) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SafeTransferFromRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SafeBatchTransferFromRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress string   `protobuf:"bytes,1,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress   string   `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Ids         [][]byte `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`         //uint256
	Amounts     [][]byte `protobuf:"bytes,4,rep,name=amounts,proto3" json:"amounts,omitempty"` //uint256
	Data        []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SafeBatchTransferFromRequest) Reset() {
	*x = SafeBatchTransferFromRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeBatchTransferFromRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeBatchTransferFromRequest) ProtoMessage() {}

func (x *SafeBatchTransferFromRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeBatchTransferFromRequest.ProtoReflect.Descriptor instead.
func (*SafeBatchTransferFromRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{24}
}

func (x *SafeBatchTransferFromRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *SafeBatchTransferFromRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SafeBatchTransferFromRequest) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SafeBatchTransferFromRequest) GetAmounts() [][]byte {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *SafeBatchTransferFromRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetApprovalForAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorAddress string `protobuf:"bytes,1,opt,name=operatorAddress,proto3" json:"operatorAddress,omitempty"`
	Approved        bool   `protobuf:"varint,2,opt,name=approved,proto3" json:"approved,omitempty"`
}

func (x *SetApprovalForAllRequest) Reset() {
	*x = SetApprovalForAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetApprovalForAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetApprovalForAllRequest) ProtoMessage() {}

func (x *SetApprovalForAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetApprovalForAllRequest.ProtoReflect.Descriptor instead.
func (*SetApprovalForAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{25}
}

func (x *SetApprovalForAllRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *SetApprovalForAllRequest) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

//Governance methods
// 重置NFT url统一前缀
type SetBaseMetadataURIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseMetadataURI string `protobuf:"bytes,1,opt,name=baseMetadataURI,proto3" json:"baseMetadataURI,omitempty"`
}

func (x *SetBaseMetadataURIRequest) Reset() {
	*x = SetBaseMetadataURIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBaseMetadataURIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBaseMetadataURIRequest) ProtoMessage() {}

func (x *SetBaseMetadataURIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBaseMetadataURIRequest.ProtoReflect.Descriptor instead.
func (*SetBaseMetadataURIRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{26}
}

func (x *SetBaseMetadataURIRequest) GetBaseMetadataURI() string {
	if x != nil {
		return x.BaseMetadataURI
	}
	return ""
}

// 创建一类新资产
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitOwnerAddress string `protobuf:"bytes,1,opt,name=initOwnerAddress,proto3" json:"initOwnerAddress,omitempty"`
	InitSupply       []byte `protobuf:"bytes,2,opt,name=initSupply,proto3" json:"initSupply,omitempty"` //uint256
	Uri              string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Data             []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{27}
}

func (x *CreateRequest) GetInitOwnerAddress() string {
	if x != nil {
		return x.InitOwnerAddress
	}
	return ""
}

func (x *CreateRequest) GetInitSupply() []byte {
	if x != nil {
		return x.InitSupply
	}
	return nil
}

func (x *CreateRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitOwnerAddress string   `protobuf:"bytes,1,opt,name=initOwnerAddress,proto3" json:"initOwnerAddress,omitempty"`
	Quantities       [][]byte `protobuf:"bytes,2,rep,name=quantities,proto3" json:"quantities,omitempty"` //uint256
	Uris             []string `protobuf:"bytes,3,rep,name=uris,proto3" json:"uris,omitempty"`
	Data             []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateBatchRequest) Reset() {
	*x = CreateBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchRequest) ProtoMessage() {}

func (x *CreateBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{28}
}

func (x *CreateBatchRequest) GetInitOwnerAddress() string {
	if x != nil {
		return x.InitOwnerAddress
	}
	return ""
}

func (x *CreateBatchRequest) GetQuantities() [][]byte {
	if x != nil {
		return x.Quantities
	}
	return nil
}

func (x *CreateBatchRequest) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *CreateBatchRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 转移管理者权限到newGovernor地址
type TransferGovernorshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewGovernorAddress string `protobuf:"bytes,1,opt,name=newGovernorAddress,proto3" json:"newGovernorAddress,omitempty"`
}

func (x *TransferGovernorshipRequest) Reset() {
	*x = TransferGovernorshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGovernorshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGovernorshipRequest) ProtoMessage() {}

func (x *TransferGovernorshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGovernorshipRequest.ProtoReflect.Descriptor instead.
func (*TransferGovernorshipRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{29}
}

func (x *TransferGovernorshipRequest) GetNewGovernorAddress() string {
	if x != nil {
		return x.NewGovernorAddress
	}
	return ""
}

//资产类别为_id(资产类别需要事先创建) 增发_quantity数量给_to
type MintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressTo string `protobuf:"bytes,1,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Id        []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`             //uint256
	Quantity  []byte `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"` //uint 256
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MintRequest) Reset() {
	*x = MintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintRequest) ProtoMessage() {}

func (x *MintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintRequest.ProtoReflect.Descriptor instead.
func (*MintRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{30}
}

func (x *MintRequest) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *MintRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MintRequest) GetQuantity() []byte {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *MintRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

//资产类别为_id(资产类别需要事先创建) 批量增发_quantity数量给_to
type MintBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressTo  string   `protobuf:"bytes,1,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Ids        [][]byte `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`               //uint256
	Quantities [][]byte `protobuf:"bytes,3,rep,name=quantities,proto3" json:"quantities,omitempty"` //uint 256
	Data       []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MintBatchRequest) Reset() {
	*x = MintBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintBatchRequest) ProtoMessage() {}

func (x *MintBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintBatchRequest.ProtoReflect.Descriptor instead.
func (*MintBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{31}
}

func (x *MintBatchRequest) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *MintBatchRequest) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *MintBatchRequest) GetQuantities() [][]byte {
	if x != nil {
		return x.Quantities
	}
	return nil
}

func (x *MintBatchRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 将增发资产类别为_id数组的权限转移给_to
type SetCreatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressTo string   `protobuf:"bytes,1,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Ids       [][]byte `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SetCreatorRequest) Reset() {
	*x = SetCreatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCreatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCreatorRequest) ProtoMessage() {}

func (x *SetCreatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCreatorRequest.ProtoReflect.Descriptor instead.
func (*SetCreatorRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{32}
}

func (x *SetCreatorRequest) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *SetCreatorRequest) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SetIdURIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //uint256
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *SetIdURIRequest) Reset() {
	*x = SetIdURIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIdURIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIdURIRequest) ProtoMessage() {}

func (x *SetIdURIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIdURIRequest.ProtoReflect.Descriptor instead.
func (*SetIdURIRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{33}
}

func (x *SetIdURIRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetIdURIRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

//批量设置_id资产类型的url
type SetIdURIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids  [][]byte `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Uris []string `protobuf:"bytes,2,rep,name=uris,proto3" json:"uris,omitempty"`
}

func (x *SetIdURIsRequest) Reset() {
	*x = SetIdURIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIdURIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIdURIsRequest) ProtoMessage() {}

func (x *SetIdURIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIdURIsRequest.ProtoReflect.Descriptor instead.
func (*SetIdURIsRequest) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{34}
}

func (x *SetIdURIsRequest) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SetIdURIsRequest) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

type WritingMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method          string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	TransactionHash string `protobuf:"bytes,2,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	State           uint64 `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WritingMethodResponse) Reset() {
	*x = WritingMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritingMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritingMethodResponse) ProtoMessage() {}

func (x *WritingMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritingMethodResponse.ProtoReflect.Descriptor instead.
func (*WritingMethodResponse) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{35}
}

func (x *WritingMethodResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *WritingMethodResponse) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *WritingMethodResponse) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

type TransferBatchIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftContractAddr string   `protobuf:"bytes,1,opt,name=nftContractAddr,proto3" json:"nftContractAddr,omitempty"`
	ToAddress       string   `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Ids             [][]byte `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
	Quantities      [][]byte `protobuf:"bytes,4,rep,name=quantities,proto3" json:"quantities,omitempty"`
}

func (x *TransferBatchIDReq) Reset() {
	*x = TransferBatchIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nft1155_nft1155_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferBatchIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferBatchIDReq) ProtoMessage() {}

func (x *TransferBatchIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nft1155_nft1155_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferBatchIDReq.ProtoReflect.Descriptor instead.
func (*TransferBatchIDReq) Descriptor() ([]byte, []int) {
	return file_proto_nft1155_nft1155_proto_rawDescGZIP(), []int{36}
}

func (x *TransferBatchIDReq) GetNftContractAddr() string {
	if x != nil {
		return x.NftContractAddr
	}
	return ""
}

func (x *TransferBatchIDReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferBatchIDReq) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TransferBatchIDReq) GetQuantities() [][]byte {
	if x != nil {
		return x.Quantities
	}
	return nil
}

var File_proto_nft1155_nft1155_proto protoreflect.FileDescriptor

var file_proto_nft1155_nft1155_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2f,
	0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e,
	0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x22, 0x32, 0x0a, 0x08, 0x49, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22,
	0xa9, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x74, 0x68, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x74, 0x68, 0x54, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x74, 0x68, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x6f,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x49, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b,
	0x69, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x14, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x48, 0x0a, 0x0e, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a,
	0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x0e, 0x0a, 0x0c, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x0d, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1c, 0x0a, 0x0a,
	0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x55, 0x72,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x24, 0x0a, 0x12, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2d, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x46, 0x0a, 0x10, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x4f, 0x66, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x67, 0x0a, 0x17, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x18, 0x49,
	0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x53, 0x61, 0x66, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x9e, 0x01, 0x0a, 0x1c, 0x53, 0x61, 0x66, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x60, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46,
	0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x22, 0x45, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x52, 0x49, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x49, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69,
	0x6e, 0x69, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x6e, 0x69,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x6e, 0x69, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x72, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x77, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6b, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x10, 0x4d, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x33, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x49, 0x64, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x38, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x49, 0x64, 0x55,
	0x52, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x72, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x69, 0x73,
	0x22, 0x6f, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x66, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6e, 0x66, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x32, 0x92, 0x10, 0x0a, 0x07, 0x4e, 0x46, 0x54, 0x31, 0x31, 0x35, 0x35, 0x12, 0x33,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e,
	0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x2e,
	0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x03, 0x55, 0x72, 0x69, 0x12, 0x13, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6e,
	0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x12,
	0x19, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x66, 0x74,
	0x31, 0x31, 0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4f, 0x66, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31,
	0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31,
	0x35, 0x35, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10,
	0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c,
	0x12, 0x20, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x49, 0x73, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x49, 0x73, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x2e, 0x6e, 0x66, 0x74, 0x31,
	0x31, 0x35, 0x35, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x15, 0x53,
	0x61, 0x66, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x53,
	0x61, 0x66, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c,
	0x12, 0x21, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x49, 0x12, 0x22, 0x2e, 0x6e, 0x66, 0x74, 0x31,
	0x31, 0x35, 0x35, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b,
	0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x24, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31,
	0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x4d, 0x69, 0x6e,
	0x74, 0x12, 0x14, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x4d, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x4d,
	0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x2e,
	0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31,
	0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x55, 0x52, 0x49, 0x12, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x49, 0x64, 0x55, 0x52, 0x49, 0x73, 0x12, 0x19, 0x2e, 0x6e,
	0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x55, 0x52, 0x49, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x6e, 0x66, 0x74,
	0x31, 0x31, 0x35, 0x35, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x12, 0x1d, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31,
	0x35, 0x35, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35,
	0x35, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b,
	0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6e, 0x66,
	0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1b, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6e,
	0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20,
	0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6e, 0x66, 0x74, 0x31, 0x31, 0x35, 0x35, 0x3b, 0x70, 0x62, 0x4e, 0x66, 0x74,
	0x31, 0x31, 0x35, 0x35, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_nft1155_nft1155_proto_rawDescOnce sync.Once
	file_proto_nft1155_nft1155_proto_rawDescData = file_proto_nft1155_nft1155_proto_rawDesc
)

func file_proto_nft1155_nft1155_proto_rawDescGZIP() []byte {
	file_proto_nft1155_nft1155_proto_rawDescOnce.Do(func() {
		file_proto_nft1155_nft1155_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_nft1155_nft1155_proto_rawDescData)
	})
	return file_proto_nft1155_nft1155_proto_rawDescData
}

var file_proto_nft1155_nft1155_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_nft1155_nft1155_proto_goTypes = []interface{}{
	(*IdAmount)(nil),                     // 0: nft1155.IdAmount
	(*GetTransactionByHashReq)(nil),      // 1: nft1155.GetTransactionByHashReq
	(*GetTransactionByHashResponse)(nil), // 2: nft1155.GetTransactionByHashResponse
	(*TransferERC20Request)(nil),         // 3: nft1155.TransferERC20Request
	(*GasFeeResponse)(nil),               // 4: nft1155.GasFeeResponse
	(*NameRequest)(nil),                  // 5: nft1155.NameRequest
	(*NameResponse)(nil),                 // 6: nft1155.NameResponse
	(*SymbolRequest)(nil),                // 7: nft1155.SymbolRequest
	(*SymbolResponse)(nil),               // 8: nft1155.SymbolResponse
	(*OwnerRequest)(nil),                 // 9: nft1155.OwnerRequest
	(*OwnerResponse)(nil),                // 10: nft1155.OwnerResponse
	(*UriRequest)(nil),                   // 11: nft1155.UriRequest
	(*UriResponse)(nil),                  // 12: nft1155.UriResponse
	(*TokenSupplyRequest)(nil),           // 13: nft1155.TokenSupplyRequest
	(*TokenSupplyResponse)(nil),          // 14: nft1155.TokenSupplyResponse
	(*BalanceOfRequest)(nil),             // 15: nft1155.BalanceOfRequest
	(*BalanceOfResponse)(nil),            // 16: nft1155.BalanceOfResponse
	(*BalanceOfBatchRequest)(nil),        // 17: nft1155.BalanceOfBatchRequest
	(*BalanceOfBatchResponse)(nil),       // 18: nft1155.BalanceOfBatchResponse
	(*GetNextTokenIDRequest)(nil),        // 19: nft1155.GetNextTokenIDRequest
	(*GetNextTokenIDResponse)(nil),       // 20: nft1155.GetNextTokenIDResponse
	(*IsApprovedForAllRequest)(nil),      // 21: nft1155.IsApprovedForAllRequest
	(*IsApprovedForAllResponse)(nil),     // 22: nft1155.IsApprovedForAllResponse
	(*SafeTransferFromRequest)(nil),      // 23: nft1155.SafeTransferFromRequest
	(*SafeBatchTransferFromRequest)(nil), // 24: nft1155.SafeBatchTransferFromRequest
	(*SetApprovalForAllRequest)(nil),     // 25: nft1155.SetApprovalForAllRequest
	(*SetBaseMetadataURIRequest)(nil),    // 26: nft1155.SetBaseMetadataURIRequest
	(*CreateRequest)(nil),                // 27: nft1155.CreateRequest
	(*CreateBatchRequest)(nil),           // 28: nft1155.CreateBatchRequest
	(*TransferGovernorshipRequest)(nil),  // 29: nft1155.TransferGovernorshipRequest
	(*MintRequest)(nil),                  // 30: nft1155.MintRequest
	(*MintBatchRequest)(nil),             // 31: nft1155.MintBatchRequest
	(*SetCreatorRequest)(nil),            // 32: nft1155.SetCreatorRequest
	(*SetIdURIRequest)(nil),              // 33: nft1155.SetIdURIRequest
	(*SetIdURIsRequest)(nil),             // 34: nft1155.SetIdURIsRequest
	(*WritingMethodResponse)(nil),        // 35: nft1155.WritingMethodResponse
	(*TransferBatchIDReq)(nil),           // 36: nft1155.TransferBatchIDReq
}
var file_proto_nft1155_nft1155_proto_depIdxs = []int32{
	0,  // 0: nft1155.GetTransactionByHashResponse.idAndAmount:type_name -> nft1155.IdAmount
	15, // 1: nft1155.BalanceOfBatchRequest.owners:type_name -> nft1155.BalanceOfRequest
	16, // 2: nft1155.BalanceOfBatchResponse.balances:type_name -> nft1155.BalanceOfResponse
	5,  // 3: nft1155.NFT1155.Name:input_type -> nft1155.NameRequest
	7,  // 4: nft1155.NFT1155.Symbol:input_type -> nft1155.SymbolRequest
	9,  // 5: nft1155.NFT1155.Owner:input_type -> nft1155.OwnerRequest
	13, // 6: nft1155.NFT1155.TokenSupply:input_type -> nft1155.TokenSupplyRequest
	11, // 7: nft1155.NFT1155.Uri:input_type -> nft1155.UriRequest
	15, // 8: nft1155.NFT1155.BalanceOf:input_type -> nft1155.BalanceOfRequest
	17, // 9: nft1155.NFT1155.BalanceOfBatch:input_type -> nft1155.BalanceOfBatchRequest
	19, // 10: nft1155.NFT1155.GetNextTokenID:input_type -> nft1155.GetNextTokenIDRequest
	21, // 11: nft1155.NFT1155.IsApprovedForAll:input_type -> nft1155.IsApprovedForAllRequest
	23, // 12: nft1155.NFT1155.SafeTransferFrom:input_type -> nft1155.SafeTransferFromRequest
	24, // 13: nft1155.NFT1155.SafeBatchTransferFrom:input_type -> nft1155.SafeBatchTransferFromRequest
	25, // 14: nft1155.NFT1155.SetApprovalForAll:input_type -> nft1155.SetApprovalForAllRequest
	26, // 15: nft1155.NFT1155.SetBaseMetadataURI:input_type -> nft1155.SetBaseMetadataURIRequest
	27, // 16: nft1155.NFT1155.Create:input_type -> nft1155.CreateRequest
	28, // 17: nft1155.NFT1155.CreateBatch:input_type -> nft1155.CreateBatchRequest
	29, // 18: nft1155.NFT1155.TransferGovernorship:input_type -> nft1155.TransferGovernorshipRequest
	30, // 19: nft1155.NFT1155.Mint:input_type -> nft1155.MintRequest
	31, // 20: nft1155.NFT1155.MintBatch:input_type -> nft1155.MintBatchRequest
	32, // 21: nft1155.NFT1155.SetCreator:input_type -> nft1155.SetCreatorRequest
	33, // 22: nft1155.NFT1155.SetIdURI:input_type -> nft1155.SetIdURIRequest
	34, // 23: nft1155.NFT1155.SetIdURIs:input_type -> nft1155.SetIdURIsRequest
	36, // 24: nft1155.NFT1155.TransferBatchID:input_type -> nft1155.TransferBatchIDReq
	3,  // 25: nft1155.NFT1155.TransferERC20:input_type -> nft1155.TransferERC20Request
	28, // 26: nft1155.NFT1155.GetCreateBatchPrice:input_type -> nft1155.CreateBatchRequest
	36, // 27: nft1155.NFT1155.GetTransferBatchIDPrice:input_type -> nft1155.TransferBatchIDReq
	3,  // 28: nft1155.NFT1155.GetTransferERC20Price:input_type -> nft1155.TransferERC20Request
	1,  // 29: nft1155.NFT1155.GetTransactionByHash:input_type -> nft1155.GetTransactionByHashReq
	6,  // 30: nft1155.NFT1155.Name:output_type -> nft1155.NameResponse
	8,  // 31: nft1155.NFT1155.Symbol:output_type -> nft1155.SymbolResponse
	10, // 32: nft1155.NFT1155.Owner:output_type -> nft1155.OwnerResponse
	14, // 33: nft1155.NFT1155.TokenSupply:output_type -> nft1155.TokenSupplyResponse
	12, // 34: nft1155.NFT1155.Uri:output_type -> nft1155.UriResponse
	16, // 35: nft1155.NFT1155.BalanceOf:output_type -> nft1155.BalanceOfResponse
	18, // 36: nft1155.NFT1155.BalanceOfBatch:output_type -> nft1155.BalanceOfBatchResponse
	20, // 37: nft1155.NFT1155.GetNextTokenID:output_type -> nft1155.GetNextTokenIDResponse
	22, // 38: nft1155.NFT1155.IsApprovedForAll:output_type -> nft1155.IsApprovedForAllResponse
	35, // 39: nft1155.NFT1155.SafeTransferFrom:output_type -> nft1155.WritingMethodResponse
	35, // 40: nft1155.NFT1155.SafeBatchTransferFrom:output_type -> nft1155.WritingMethodResponse
	35, // 41: nft1155.NFT1155.SetApprovalForAll:output_type -> nft1155.WritingMethodResponse
	35, // 42: nft1155.NFT1155.SetBaseMetadataURI:output_type -> nft1155.WritingMethodResponse
	35, // 43: nft1155.NFT1155.Create:output_type -> nft1155.WritingMethodResponse
	35, // 44: nft1155.NFT1155.CreateBatch:output_type -> nft1155.WritingMethodResponse
	35, // 45: nft1155.NFT1155.TransferGovernorship:output_type -> nft1155.WritingMethodResponse
	35, // 46: nft1155.NFT1155.Mint:output_type -> nft1155.WritingMethodResponse
	35, // 47: nft1155.NFT1155.MintBatch:output_type -> nft1155.WritingMethodResponse
	35, // 48: nft1155.NFT1155.SetCreator:output_type -> nft1155.WritingMethodResponse
	35, // 49: nft1155.NFT1155.SetIdURI:output_type -> nft1155.WritingMethodResponse
	35, // 50: nft1155.NFT1155.SetIdURIs:output_type -> nft1155.WritingMethodResponse
	35, // 51: nft1155.NFT1155.TransferBatchID:output_type -> nft1155.WritingMethodResponse
	35, // 52: nft1155.NFT1155.TransferERC20:output_type -> nft1155.WritingMethodResponse
	4,  // 53: nft1155.NFT1155.GetCreateBatchPrice:output_type -> nft1155.GasFeeResponse
	4,  // 54: nft1155.NFT1155.GetTransferBatchIDPrice:output_type -> nft1155.GasFeeResponse
	4,  // 55: nft1155.NFT1155.GetTransferERC20Price:output_type -> nft1155.GasFeeResponse
	2,  // 56: nft1155.NFT1155.GetTransactionByHash:output_type -> nft1155.GetTransactionByHashResponse
	30, // [30:57] is the sub-list for method output_type
	3,  // [3:30] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_nft1155_nft1155_proto_init() }
func file_proto_nft1155_nft1155_proto_init() {
	if File_proto_nft1155_nft1155_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_nft1155_nft1155_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferERC20Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UriRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UriResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenSupplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenSupplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTokenIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTokenIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsApprovedForAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsApprovedForAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeTransferFromRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeBatchTransferFromRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetApprovalForAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBaseMetadataURIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGovernorshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCreatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIdURIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIdURIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritingMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nft1155_nft1155_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferBatchIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_nft1155_nft1155_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_nft1155_nft1155_proto_goTypes,
		DependencyIndexes: file_proto_nft1155_nft1155_proto_depIdxs,
		MessageInfos:      file_proto_nft1155_nft1155_proto_msgTypes,
	}.Build()
	File_proto_nft1155_nft1155_proto = out.File
	file_proto_nft1155_nft1155_proto_rawDesc = nil
	file_proto_nft1155_nft1155_proto_goTypes = nil
	file_proto_nft1155_nft1155_proto_depIdxs = nil
}

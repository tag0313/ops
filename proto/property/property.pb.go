// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: proto/property/property.proto

package pbProperty

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpsIncDec int32

const (
	OpsIncDec_Non OpsIncDec = 0
	OpsIncDec_Inc OpsIncDec = 1
	OpsIncDec_Dec OpsIncDec = 2
)

// Enum value maps for OpsIncDec.
var (
	OpsIncDec_name = map[int32]string{
		0: "Non",
		1: "Inc",
		2: "Dec",
	}
	OpsIncDec_value = map[string]int32{
		"Non": 0,
		"Inc": 1,
		"Dec": 2,
	}
)

func (x OpsIncDec) Enum() *OpsIncDec {
	p := new(OpsIncDec)
	*p = x
	return p
}

func (x OpsIncDec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpsIncDec) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_property_property_proto_enumTypes[0].Descriptor()
}

func (OpsIncDec) Type() protoreflect.EnumType {
	return &file_proto_property_property_proto_enumTypes[0]
}

func (x OpsIncDec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpsIncDec.Descriptor instead.
func (OpsIncDec) EnumDescriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{0}
}

type IncDecOpsPointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op       OpsIncDec `protobuf:"varint,1,opt,name=op,proto3,enum=PBproperty.OpsIncDec" json:"op,omitempty"`
	OpsPoint float64   `protobuf:"fixed64,2,opt,name=OpsPoint,proto3" json:"OpsPoint,omitempty"`
	Uid      string    `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *IncDecOpsPointReq) Reset() {
	*x = IncDecOpsPointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncDecOpsPointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncDecOpsPointReq) ProtoMessage() {}

func (x *IncDecOpsPointReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncDecOpsPointReq.ProtoReflect.Descriptor instead.
func (*IncDecOpsPointReq) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{0}
}

func (x *IncDecOpsPointReq) GetOp() OpsIncDec {
	if x != nil {
		return x.Op
	}
	return OpsIncDec_Non
}

func (x *IncDecOpsPointReq) GetOpsPoint() float64 {
	if x != nil {
		return x.OpsPoint
	}
	return 0
}

func (x *IncDecOpsPointReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type IncDecOpsPointResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpsBalance float64 `protobuf:"fixed64,1,opt,name=OpsBalance,proto3" json:"OpsBalance,omitempty"`
}

func (x *IncDecOpsPointResp) Reset() {
	*x = IncDecOpsPointResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncDecOpsPointResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncDecOpsPointResp) ProtoMessage() {}

func (x *IncDecOpsPointResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncDecOpsPointResp.ProtoReflect.Descriptor instead.
func (*IncDecOpsPointResp) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{1}
}

func (x *IncDecOpsPointResp) GetOpsBalance() float64 {
	if x != nil {
		return x.OpsBalance
	}
	return 0
}

type TransferERC20Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress     string `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress       string `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionHash string `protobuf:"bytes,4,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
}

func (x *TransferERC20Request) Reset() {
	*x = TransferERC20Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferERC20Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferERC20Request) ProtoMessage() {}

func (x *TransferERC20Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferERC20Request.ProtoReflect.Descriptor instead.
func (*TransferERC20Request) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{2}
}

func (x *TransferERC20Request) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TransferERC20Request) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferERC20Request) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferERC20Request) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type TransferERC20Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferERC20Response) Reset() {
	*x = TransferERC20Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferERC20Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferERC20Response) ProtoMessage() {}

func (x *TransferERC20Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferERC20Response.ProtoReflect.Descriptor instead.
func (*TransferERC20Response) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{3}
}

type OpsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OpsPoint float64 `protobuf:"fixed64,2,opt,name=ops_point,proto3" json:"ops_point,omitempty"`
}

func (x *OpsPoint) Reset() {
	*x = OpsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsPoint) ProtoMessage() {}

func (x *OpsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsPoint.ProtoReflect.Descriptor instead.
func (*OpsPoint) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{4}
}

func (x *OpsPoint) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OpsPoint) GetOpsPoint() float64 {
	if x != nil {
		return x.OpsPoint
	}
	return 0
}

type OperateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *OperateResult) Reset() {
	*x = OperateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateResult) ProtoMessage() {}

func (x *OperateResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateResult.ProtoReflect.Descriptor instead.
func (*OperateResult) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{5}
}

func (x *OperateResult) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ListOCardOnOps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	PurchaseInfo []*OCardsOnOps `protobuf:"bytes,2,rep,name=purchase_info,proto3" json:"purchase_info,omitempty"`
}

func (x *ListOCardOnOps) Reset() {
	*x = ListOCardOnOps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOCardOnOps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOCardOnOps) ProtoMessage() {}

func (x *ListOCardOnOps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOCardOnOps.ProtoReflect.Descriptor instead.
func (*ListOCardOnOps) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{6}
}

func (x *ListOCardOnOps) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListOCardOnOps) GetPurchaseInfo() []*OCardsOnOps {
	if x != nil {
		return x.PurchaseInfo
	}
	return nil
}

//message ListOCard{
//  string code = 1;
//  string timestamp = 2;
//  int64 show_number = 3 [json_name="show_number"];
//  int64 current_page = 4 [json_name="current_page"];
//  repeated OCard data = 5;
//}
type OCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId         string `protobuf:"bytes,1,opt,name=group_id,proto3" json:"group_id,omitempty"`
	CardType        string `protobuf:"bytes,2,opt,name=card_type,proto3" json:"card_type,omitempty"`
	MintDate        string `protobuf:"bytes,3,opt,name=mint_date,proto3" json:"mint_date,omitempty"`
	Uid             string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Amount          []byte `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionHash string `protobuf:"bytes,6,opt,name=transaction_hash,proto3" json:"transaction_hash,omitempty"`
	JsonId          string `protobuf:"bytes,7,opt,name=json_id,proto3" json:"json_id,omitempty"`
	Sold            []byte `protobuf:"bytes,8,opt,name=sold,proto3" json:"sold,omitempty"`
}

func (x *OCard) Reset() {
	*x = OCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCard) ProtoMessage() {}

func (x *OCard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCard.ProtoReflect.Descriptor instead.
func (*OCard) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{7}
}

func (x *OCard) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OCard) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *OCard) GetMintDate() string {
	if x != nil {
		return x.MintDate
	}
	return ""
}

func (x *OCard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OCard) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *OCard) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *OCard) GetJsonId() string {
	if x != nil {
		return x.JsonId
	}
	return ""
}

func (x *OCard) GetSold() []byte {
	if x != nil {
		return x.Sold
	}
	return nil
}

type OCardOnMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId         string `protobuf:"bytes,1,opt,name=group_id,proto3" json:"group_id,omitempty"`
	CardType        string `protobuf:"bytes,2,opt,name=card_type,proto3" json:"card_type,omitempty"`
	MintDate        string `protobuf:"bytes,3,opt,name=mint_date,proto3" json:"mint_date,omitempty"`
	Uid             string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Amount          int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionHash string `protobuf:"bytes,6,opt,name=transaction_hash,proto3" json:"transaction_hash,omitempty"`
	JsonId          string `protobuf:"bytes,7,opt,name=json_id,proto3" json:"json_id,omitempty"`
	Sold            int64  `protobuf:"varint,8,opt,name=sold,proto3" json:"sold,omitempty"`
}

func (x *OCardOnMongo) Reset() {
	*x = OCardOnMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCardOnMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCardOnMongo) ProtoMessage() {}

func (x *OCardOnMongo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCardOnMongo.ProtoReflect.Descriptor instead.
func (*OCardOnMongo) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{8}
}

func (x *OCardOnMongo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OCardOnMongo) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *OCardOnMongo) GetMintDate() string {
	if x != nil {
		return x.MintDate
	}
	return ""
}

func (x *OCardOnMongo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OCardOnMongo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OCardOnMongo) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *OCardOnMongo) GetJsonId() string {
	if x != nil {
		return x.JsonId
	}
	return ""
}

func (x *OCardOnMongo) GetSold() int64 {
	if x != nil {
		return x.Sold
	}
	return 0
}

type ListOCardOnMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Data []*OCardOnMongo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListOCardOnMongo) Reset() {
	*x = ListOCardOnMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOCardOnMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOCardOnMongo) ProtoMessage() {}

func (x *ListOCardOnMongo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOCardOnMongo.ProtoReflect.Descriptor instead.
func (*ListOCardOnMongo) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{9}
}

func (x *ListOCardOnMongo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListOCardOnMongo) GetData() []*OCardOnMongo {
	if x != nil {
		return x.Data
	}
	return nil
}

type BuyOCardOnOpsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseInfo []*OCardsOnOps `protobuf:"bytes,1,rep,name=purchase_info,proto3" json:"purchase_info,omitempty"`
}

func (x *BuyOCardOnOpsReq) Reset() {
	*x = BuyOCardOnOpsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOCardOnOpsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOCardOnOpsReq) ProtoMessage() {}

func (x *BuyOCardOnOpsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOCardOnOpsReq.ProtoReflect.Descriptor instead.
func (*BuyOCardOnOpsReq) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{10}
}

func (x *BuyOCardOnOpsReq) GetPurchaseInfo() []*OCardsOnOps {
	if x != nil {
		return x.PurchaseInfo
	}
	return nil
}

type OCardsOnOps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyerUid     string  `protobuf:"bytes,1,opt,name=buyer_uid,proto3" json:"buyer_uid,omitempty"`
	GroupId      string  `protobuf:"bytes,2,opt,name=group_id,proto3" json:"group_id,omitempty"`
	CardType     string  `protobuf:"bytes,3,opt,name=card_type,proto3" json:"card_type,omitempty"`
	MintDate     string  `protobuf:"bytes,4,opt,name=mint_date,proto3" json:"mint_date,omitempty"`
	SellerUid    string  `protobuf:"bytes,5,opt,name=seller_uid,proto3" json:"seller_uid,omitempty"`
	Amount       int64   `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	PurchaseTime string  `protobuf:"bytes,7,opt,name=purchase_time,proto3" json:"purchase_time,omitempty"`
	UnitPrice    float64 `protobuf:"fixed64,8,opt,name=unit_price,proto3" json:"unit_price,omitempty"`
}

func (x *OCardsOnOps) Reset() {
	*x = OCardsOnOps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCardsOnOps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCardsOnOps) ProtoMessage() {}

func (x *OCardsOnOps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCardsOnOps.ProtoReflect.Descriptor instead.
func (*OCardsOnOps) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{11}
}

func (x *OCardsOnOps) GetBuyerUid() string {
	if x != nil {
		return x.BuyerUid
	}
	return ""
}

func (x *OCardsOnOps) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OCardsOnOps) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *OCardsOnOps) GetMintDate() string {
	if x != nil {
		return x.MintDate
	}
	return ""
}

func (x *OCardsOnOps) GetSellerUid() string {
	if x != nil {
		return x.SellerUid
	}
	return ""
}

func (x *OCardsOnOps) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OCardsOnOps) GetPurchaseTime() string {
	if x != nil {
		return x.PurchaseTime
	}
	return ""
}

func (x *OCardsOnOps) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

type OCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ocard []*OCard `protobuf:"bytes,1,rep,name=ocard,proto3" json:"ocard,omitempty"`
}

func (x *OCards) Reset() {
	*x = OCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCards) ProtoMessage() {}

func (x *OCards) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCards.ProtoReflect.Descriptor instead.
func (*OCards) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{12}
}

func (x *OCards) GetOcard() []*OCard {
	if x != nil {
		return x.Ocard
	}
	return nil
}

type QueryField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Timestamp  string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ShowNumber int64  `protobuf:"varint,3,opt,name=show_number,proto3" json:"show_number,omitempty"`
	PageNumber int64  `protobuf:"varint,4,opt,name=page_number,proto3" json:"page_number,omitempty"`
}

func (x *QueryField) Reset() {
	*x = QueryField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryField) ProtoMessage() {}

func (x *QueryField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryField.ProtoReflect.Descriptor instead.
func (*QueryField) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{13}
}

func (x *QueryField) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *QueryField) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *QueryField) GetShowNumber() int64 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *QueryField) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type MintCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    []*Info `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Gasfee  string  `protobuf:"bytes,2,opt,name=gasfee,proto3" json:"gasfee,omitempty"`
	Uri     string  `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	GroupId string  `protobuf:"bytes,4,opt,name=group_id,proto3" json:"group_id,omitempty"`
}

func (x *MintCard) Reset() {
	*x = MintCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintCard) ProtoMessage() {}

func (x *MintCard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintCard.ProtoReflect.Descriptor instead.
func (*MintCard) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{14}
}

func (x *MintCard) GetInfo() []*Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *MintCard) GetGasfee() string {
	if x != nil {
		return x.Gasfee
	}
	return ""
}

func (x *MintCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MintCard) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ocard  string `protobuf:"bytes,1,opt,name=ocard,proto3" json:"ocard,omitempty"`
	Amount []byte `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{15}
}

func (x *Info) GetOcard() string {
	if x != nil {
		return x.Ocard
	}
	return ""
}

func (x *Info) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type JsonIdAndGroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonId  string `protobuf:"bytes,1,opt,name=json_id,proto3" json:"json_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,proto3" json:"group_id,omitempty"`
}

func (x *JsonIdAndGroupId) Reset() {
	*x = JsonIdAndGroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonIdAndGroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonIdAndGroupId) ProtoMessage() {}

func (x *JsonIdAndGroupId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonIdAndGroupId.ProtoReflect.Descriptor instead.
func (*JsonIdAndGroupId) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{16}
}

func (x *JsonIdAndGroupId) GetJsonId() string {
	if x != nil {
		return x.JsonId
	}
	return ""
}

func (x *JsonIdAndGroupId) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type JsonIdAndGroupIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonIdAndGroupId []*JsonIdAndGroupId `protobuf:"bytes,1,rep,name=jsonIdAndGroupId,proto3" json:"jsonIdAndGroupId,omitempty"`
}

func (x *JsonIdAndGroupIds) Reset() {
	*x = JsonIdAndGroupIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonIdAndGroupIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonIdAndGroupIds) ProtoMessage() {}

func (x *JsonIdAndGroupIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonIdAndGroupIds.ProtoReflect.Descriptor instead.
func (*JsonIdAndGroupIds) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{17}
}

func (x *JsonIdAndGroupIds) GetJsonIdAndGroupId() []*JsonIdAndGroupId {
	if x != nil {
		return x.JsonIdAndGroupId
	}
	return nil
}

type MintOCardsSuccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIds        [][]byte `protobuf:"bytes,1,rep,name=group_ids,proto3" json:"group_ids,omitempty"`
	Amounts         [][]byte `protobuf:"bytes,2,rep,name=amounts,proto3" json:"amounts,omitempty"`
	TransactionHash string   `protobuf:"bytes,3,opt,name=transaction_hash,proto3" json:"transaction_hash,omitempty"`
	FromAddress     string   `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress       string   `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	OperatorAddress string   `protobuf:"bytes,6,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"` //reserved, not used
}

func (x *MintOCardsSuccessInfo) Reset() {
	*x = MintOCardsSuccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintOCardsSuccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintOCardsSuccessInfo) ProtoMessage() {}

func (x *MintOCardsSuccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintOCardsSuccessInfo.ProtoReflect.Descriptor instead.
func (*MintOCardsSuccessInfo) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{18}
}

func (x *MintOCardsSuccessInfo) GetGroupIds() [][]byte {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *MintOCardsSuccessInfo) GetAmounts() [][]byte {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *MintOCardsSuccessInfo) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *MintOCardsSuccessInfo) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *MintOCardsSuccessInfo) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *MintOCardsSuccessInfo) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

type WithdrawOpspoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash string  `protobuf:"bytes,1,opt,name=transaction_hash,proto3" json:"transaction_hash,omitempty"`
	Uid             string  `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Opspoint        float64 `protobuf:"fixed64,3,opt,name=opspoint,proto3" json:"opspoint,omitempty"`
	Gasfee          float64 `protobuf:"fixed64,4,opt,name=gasfee,proto3" json:"gasfee,omitempty"`
}

func (x *WithdrawOpspoint) Reset() {
	*x = WithdrawOpspoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawOpspoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawOpspoint) ProtoMessage() {}

func (x *WithdrawOpspoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawOpspoint.ProtoReflect.Descriptor instead.
func (*WithdrawOpspoint) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{19}
}

func (x *WithdrawOpspoint) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *WithdrawOpspoint) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *WithdrawOpspoint) GetOpspoint() float64 {
	if x != nil {
		return x.Opspoint
	}
	return 0
}

func (x *WithdrawOpspoint) GetGasfee() float64 {
	if x != nil {
		return x.Gasfee
	}
	return 0
}

var File_proto_property_property_proto protoreflect.FileDescriptor

var file_proto_property_property_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x68, 0x0a, 0x11, 0x49,
	0x6e, 0x63, 0x44, 0x65, 0x63, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x50,
	0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x73, 0x49, 0x6e, 0x63,
	0x44, 0x65, 0x63, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4f, 0x70, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x49, 0x6e, 0x63, 0x44, 0x65, 0x63, 0x4f,
	0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f,
	0x70, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x4f, 0x70, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x14,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3a, 0x0a, 0x08, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x70, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x23,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x63, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x4f, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x64, 0x22, 0xea,
	0x01, 0x0a, 0x0c, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x64, 0x22, 0x54, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f,
	0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x51, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4f,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x0b, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4f,
	0x6e, 0x4f, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x06, 0x4f, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x6f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x76,
	0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x10,
	0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x11, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x6a,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x52, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x74, 0x4f, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x84, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4f, 0x70, 0x73,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x2a, 0x26, 0x0a, 0x09, 0x4f, 0x70, 0x73, 0x49, 0x6e,
	0x63, 0x44, 0x65, 0x63, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x6e, 0x63, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x65, 0x63, 0x10, 0x02, 0x32,
	0xa3, 0x0b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x70,
	0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x50,
	0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x50, 0x42, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x1a, 0x14, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70,
	0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4d, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11,
	0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72,
	0x64, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d,
	0x69, 0x6e, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x4f, 0x43, 0x61, 0x72, 0x64,
	0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x12, 0x1c, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4f, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f,
	0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x2e,
	0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x74,
	0x65, 0x64, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a,
	0x1c, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x1a,
	0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x1a, 0x2e, 0x50, 0x42,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x43, 0x61,
	0x72, 0x64, 0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x1c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x50, 0x42, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x1d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x73, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x50, 0x42, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4f,
	0x70, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x20, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x73, 0x12,
	0x17, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x1a, 0x17, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4f, 0x6e, 0x4f, 0x70,
	0x73, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x43,
	0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x73, 0x12, 0x17, 0x2e, 0x50,
	0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x4f, 0x6e, 0x4f, 0x70, 0x73, 0x1a, 0x19, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x44, 0x65, 0x63, 0x4f, 0x70, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x49, 0x6e, 0x63, 0x44, 0x65, 0x63, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x50, 0x42, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x49, 0x6e, 0x63, 0x44, 0x65, 0x63, 0x4f, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x3b, 0x70, 0x62, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_property_property_proto_rawDescOnce sync.Once
	file_proto_property_property_proto_rawDescData = file_proto_property_property_proto_rawDesc
)

func file_proto_property_property_proto_rawDescGZIP() []byte {
	file_proto_property_property_proto_rawDescOnce.Do(func() {
		file_proto_property_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_property_property_proto_rawDescData)
	})
	return file_proto_property_property_proto_rawDescData
}

var file_proto_property_property_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_property_property_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_property_property_proto_goTypes = []interface{}{
	(OpsIncDec)(0),                // 0: PBproperty.OpsIncDec
	(*IncDecOpsPointReq)(nil),     // 1: PBproperty.IncDecOpsPointReq
	(*IncDecOpsPointResp)(nil),    // 2: PBproperty.IncDecOpsPointResp
	(*TransferERC20Request)(nil),  // 3: PBproperty.TransferERC20Request
	(*TransferERC20Response)(nil), // 4: PBproperty.TransferERC20Response
	(*OpsPoint)(nil),              // 5: PBproperty.OpsPoint
	(*OperateResult)(nil),         // 6: PBproperty.OperateResult
	(*ListOCardOnOps)(nil),        // 7: PBproperty.ListOCardOnOps
	(*OCard)(nil),                 // 8: PBproperty.OCard
	(*OCardOnMongo)(nil),          // 9: PBproperty.OCardOnMongo
	(*ListOCardOnMongo)(nil),      // 10: PBproperty.ListOCardOnMongo
	(*BuyOCardOnOpsReq)(nil),      // 11: PBproperty.BuyOCardOnOpsReq
	(*OCardsOnOps)(nil),           // 12: PBproperty.OCardsOnOps
	(*OCards)(nil),                // 13: PBproperty.OCards
	(*QueryField)(nil),            // 14: PBproperty.QueryField
	(*MintCard)(nil),              // 15: PBproperty.MintCard
	(*Info)(nil),                  // 16: PBproperty.Info
	(*JsonIdAndGroupId)(nil),      // 17: PBproperty.JsonIdAndGroupId
	(*JsonIdAndGroupIds)(nil),     // 18: PBproperty.JsonIdAndGroupIds
	(*MintOCardsSuccessInfo)(nil), // 19: PBproperty.MintOCardsSuccessInfo
	(*WithdrawOpspoint)(nil),      // 20: PBproperty.WithdrawOpspoint
}
var file_proto_property_property_proto_depIdxs = []int32{
	0,  // 0: PBproperty.IncDecOpsPointReq.op:type_name -> PBproperty.OpsIncDec
	12, // 1: PBproperty.ListOCardOnOps.purchase_info:type_name -> PBproperty.OCardsOnOps
	9,  // 2: PBproperty.ListOCardOnMongo.data:type_name -> PBproperty.OCardOnMongo
	12, // 3: PBproperty.BuyOCardOnOpsReq.purchase_info:type_name -> PBproperty.OCardsOnOps
	8,  // 4: PBproperty.OCards.ocard:type_name -> PBproperty.OCard
	16, // 5: PBproperty.MintCard.info:type_name -> PBproperty.Info
	17, // 6: PBproperty.JsonIdAndGroupIds.jsonIdAndGroupId:type_name -> PBproperty.JsonIdAndGroupId
	5,  // 7: PBproperty.OperateProperty.OperateOpsPoint:input_type -> PBproperty.OpsPoint
	5,  // 8: PBproperty.OperateProperty.CheckOpsPoint:input_type -> PBproperty.OpsPoint
	8,  // 9: PBproperty.OperateProperty.StoreMintOCardInfo:input_type -> PBproperty.OCard
	13, // 10: PBproperty.OperateProperty.StoreMintOCardsInfo:input_type -> PBproperty.OCards
	19, // 11: PBproperty.OperateProperty.StoreMintOCardsSuccessInfo:input_type -> PBproperty.MintOCardsSuccessInfo
	11, // 12: PBproperty.OperateProperty.BuyOCardOnOps:input_type -> PBproperty.BuyOCardOnOpsReq
	8,  // 13: PBproperty.OperateProperty.OperateOCardAmount:input_type -> PBproperty.OCard
	12, // 14: PBproperty.OperateProperty.StoreOCardFromChain:input_type -> PBproperty.OCardsOnOps
	14, // 15: PBproperty.OperateProperty.QueryMintedOCard:input_type -> PBproperty.QueryField
	14, // 16: PBproperty.OperateProperty.QueryOCardFromLocal:input_type -> PBproperty.QueryField
	14, // 17: PBproperty.OperateProperty.QueryOCardFromChain:input_type -> PBproperty.QueryField
	17, // 18: PBproperty.OperateProperty.RelationshipJsonIdAndGroupId:input_type -> PBproperty.JsonIdAndGroupId
	18, // 19: PBproperty.OperateProperty.RelationshipJsonIdAndGroupIds:input_type -> PBproperty.JsonIdAndGroupIds
	20, // 20: PBproperty.OperateProperty.StoreWithdrawHistory:input_type -> PBproperty.WithdrawOpspoint
	3,  // 21: PBproperty.OperateProperty.StoreTransferERC20History:input_type -> PBproperty.TransferERC20Request
	12, // 22: PBproperty.OperateProperty.CheckOCardAmountOps:input_type -> PBproperty.OCardsOnOps
	12, // 23: PBproperty.OperateProperty.OperateOCardAmountOps:input_type -> PBproperty.OCardsOnOps
	1,  // 24: PBproperty.OperateProperty.IncDecOpsPoint:input_type -> PBproperty.IncDecOpsPointReq
	6,  // 25: PBproperty.OperateProperty.OperateOpsPoint:output_type -> PBproperty.OperateResult
	5,  // 26: PBproperty.OperateProperty.CheckOpsPoint:output_type -> PBproperty.OpsPoint
	6,  // 27: PBproperty.OperateProperty.StoreMintOCardInfo:output_type -> PBproperty.OperateResult
	6,  // 28: PBproperty.OperateProperty.StoreMintOCardsInfo:output_type -> PBproperty.OperateResult
	6,  // 29: PBproperty.OperateProperty.StoreMintOCardsSuccessInfo:output_type -> PBproperty.OperateResult
	6,  // 30: PBproperty.OperateProperty.BuyOCardOnOps:output_type -> PBproperty.OperateResult
	6,  // 31: PBproperty.OperateProperty.OperateOCardAmount:output_type -> PBproperty.OperateResult
	6,  // 32: PBproperty.OperateProperty.StoreOCardFromChain:output_type -> PBproperty.OperateResult
	10, // 33: PBproperty.OperateProperty.QueryMintedOCard:output_type -> PBproperty.ListOCardOnMongo
	7,  // 34: PBproperty.OperateProperty.QueryOCardFromLocal:output_type -> PBproperty.ListOCardOnOps
	7,  // 35: PBproperty.OperateProperty.QueryOCardFromChain:output_type -> PBproperty.ListOCardOnOps
	6,  // 36: PBproperty.OperateProperty.RelationshipJsonIdAndGroupId:output_type -> PBproperty.OperateResult
	6,  // 37: PBproperty.OperateProperty.RelationshipJsonIdAndGroupIds:output_type -> PBproperty.OperateResult
	6,  // 38: PBproperty.OperateProperty.StoreWithdrawHistory:output_type -> PBproperty.OperateResult
	4,  // 39: PBproperty.OperateProperty.StoreTransferERC20History:output_type -> PBproperty.TransferERC20Response
	12, // 40: PBproperty.OperateProperty.CheckOCardAmountOps:output_type -> PBproperty.OCardsOnOps
	6,  // 41: PBproperty.OperateProperty.OperateOCardAmountOps:output_type -> PBproperty.OperateResult
	2,  // 42: PBproperty.OperateProperty.IncDecOpsPoint:output_type -> PBproperty.IncDecOpsPointResp
	25, // [25:43] is the sub-list for method output_type
	7,  // [7:25] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_property_property_proto_init() }
func file_proto_property_property_proto_init() {
	if File_proto_property_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_property_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncDecOpsPointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncDecOpsPointResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferERC20Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferERC20Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOCardOnOps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OCardOnMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOCardOnMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOCardOnOpsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OCardsOnOps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonIdAndGroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonIdAndGroupIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintOCardsSuccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawOpspoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_property_property_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_property_property_proto_goTypes,
		DependencyIndexes: file_proto_property_property_proto_depIdxs,
		EnumInfos:         file_proto_property_property_proto_enumTypes,
		MessageInfos:      file_proto_property_property_proto_msgTypes,
	}.Build()
	File_proto_property_property_proto = out.File
	file_proto_property_property_proto_rawDesc = nil
	file_proto_property_property_proto_goTypes = nil
	file_proto_property_property_proto_depIdxs = nil
}
